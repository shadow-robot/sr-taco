<launch>
  <!-- We need some of the arm nodes running on the little control box with the
       CAN connection so they can talk to the real arm. -->
  <machine name="armbox" address="10.1.4.28" user="hand" password="hand"
    env-loader="/usr/src/ros_workspace/env.sh" />

  <param name="sa_description" command="$(find xacro)/xacro.py '$(find sr_description)/robots/sr_arm_motor.urdf.xacro'" />

  <!-- shadowarm - Runs on remote machine connected to the hardware -->
  <node machine="armbox" pkg="sr_hand" name="shadowarm" type="shadowarm_real" >
    <remap from="robot_description" to="sa_description"/>
    <param name="shadowhand_prefix" type="string" value="sr_arm/" />
    <param name="gazebo_joint_states_prefix" type="string" value="gazebo/" />
    <param name="publish_frequency_diagnostics" type="double" value="1.0" />
    <param name="publish_frequency" type="double" value="20.0" />
  </node> 
  <!-- Robot state publisher: publishes tf information regarding the 
       positions of the arm -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher_pos_arm">      
    <remap from="robot_description" to="sa_description"/>
    <remap from="joint_states" to="/sr_arm/position/joint_states" />
    <param name="publish_frequency" type="double" value="10.0" />
    <param name="tf_prefix" type="string" value="sr_arm/position" />
  </node>

  <!-- Robot state publisher: publishes tf information regarding the 
       targets of the arm -->
  <node pkg="robot_state_publisher" type="state_publisher"
	name="robot_state_publisher_target_arm">      
    <remap from="robot_description" to="sa_description"/>
    <remap from="joint_states" to="sr_arm/target/joint_states" />
    <param name="publish_frequency" type="double" value="1.0" />
    <param name="tf_prefix" type="string" value="sr_arm/target" />
  </node>

  <!--
     publishes fixed transform: to link the arm and the hand
     for both targets and positions
                                                                    -->
  <node pkg="tf" type="static_transform_publisher" name="link_hand_arm_pos" args="0 0 0 2.3562 0 0 /sr_arm/position/shadowarm_handsupport_motor /srh/position/forearm 100" />
  <node pkg="tf" type="static_transform_publisher" name="link_hand_arm_target" args="0 0 0 2.3562 0 0 /sr_arm/target/shadowarm_handsupport_motor /srh/target/forearm 100" />


  <!--
     publishes fixed transform: to link the arm and the hand
     for both targets and positions + a fixed transform to a fixed 
     point at 0 0 0, to remap the arm base for both positions and 
     targets.
                                                                    
  <node pkg="tf" type="static_transform_publisher" name="fixed_frame_pos_pub_arm" args="0 0 0 0 0 0 fixed /sr_arm/position/world 100" />
  <node pkg="tf" type="static_transform_publisher" name="fixed_frame_target_pub_arm" args="0 0 0 0 0 0 fixed /sr_arm/target/world 100" /> 
-->
 <!-- Joint States positions merger to get one single vector for both arm and hand -->
   <!-- <node pkg="sr_utilities" type="ordered_position_joint_states_merger.py" name="ordered_position_joint_states_merger"/> -->
<!-- Joint States targets merger to get one single vector for both arm and hand -->
   <!-- <node pkg="sr_utilities" type="ordered_target_joint_states_merger.py" name="ordered_target_joint_states_merger"/> -->

  
</launch>


